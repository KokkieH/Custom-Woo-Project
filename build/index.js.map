{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAIA;AAKAA,oEAAiB,CAAE,yBAAF,EAA6B;AAC1CK,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAE;AADE;AADJ,GAD8B;AAO1CC,EAAAA,IAAI,EAAE,QAAqC;AAAA,QAAnC;AAAEH,MAAAA,UAAF;AAAcI,MAAAA;AAAd,KAAmC;AACvC,UAAMC,UAAU,GAAGT,sEAAa,CAAE;AAAEU,MAAAA,SAAS,EAAE;AAAb,KAAF,CAAhC;AACA,UAAM;AACFL,MAAAA;AADE,QAEFD,UAFJ;;AAIA,aAASO,iBAAT,CAA4BC,QAA5B,EAAuC;AACnCJ,MAAAA,aAAa,CAAE;AAAEH,QAAAA,UAAU,EAAEO;AAAd,OAAF,CAAb;AACH;;AAED,WAAO,yEAAUH,UAAV,EACH,kEAAC,sEAAD;AAAmB,SAAG,EAAC;AAAvB,OACI,kEAAC,4DAAD;AAAW,WAAK,EAAC;AAAjB,OACI;AAAK,QAAE,EAAC;AAAR,OACI,oFACI;AAAQ,eAAS,EAAC;AAAlB,qBADJ,EAII,kEAAC,8DAAD;AACI,WAAK,EAAGJ,UADZ;AAEI,cAAQ,EAAGM;AAFf,MAJJ,CADJ,CADJ,CADJ,CADG,yBAgBkBN,UAhBlB,CAAP;AAiBH,GAlCyC;AAoC1CQ,EAAAA,IAAI,EAAE,SAAsB;AAAA,QAApB;AAAET,MAAAA;AAAF,KAAoB;AACxB,UAAMK,UAAU,GAAGT,uEAAA,EAAnB;AACA,UAAM;AACFK,MAAAA;AADE,QAEFD,UAFJ;AAIA,WAAO,yEAAUK,UAAV,yBAA4CJ,UAA5C,CAAP;AACH;AA3CyC,CAA7B,CAAjB,C","sources":["webpack://gh-commit-block/external window [\"wp\",\"blockEditor\"]","webpack://gh-commit-block/external window [\"wp\",\"blocks\"]","webpack://gh-commit-block/external window [\"wp\",\"components\"]","webpack://gh-commit-block/external window [\"wp\",\"element\"]","webpack://gh-commit-block/webpack/bootstrap","webpack://gh-commit-block/webpack/runtime/compat get default export","webpack://gh-commit-block/webpack/runtime/define property getters","webpack://gh-commit-block/webpack/runtime/hasOwnProperty shorthand","webpack://gh-commit-block/webpack/runtime/make namespace object","webpack://gh-commit-block/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport {\n        useBlockProps,\n        InspectorControls,\n} from '@wordpress/block-editor';\nimport {\n        PanelBody, \n        TextControl,\n} from '@wordpress/components';\n\nregisterBlockType( 'kokkieh/gh-commit-block', {\n    attributes: {\n        commitHash: {\n            type: 'string',\n        },\n    },\n\n    edit: ( { attributes, setAttributes } ) => {\n        const blockProps = useBlockProps( { className: 'blockStyles' } );\n        const {\n            commitHash,\n        } = attributes;\n\n        function onChangeTextField( newValue ) {\n            setAttributes( { commitHash: newValue } );\n        }\n\n        return <div { ...blockProps }>\n            <InspectorControls key=\"setting\">\n                <PanelBody title=\"GitHub Commit Settings\">\n                    <div id=\"gh-commit-widget-controls\">\n                        <fieldset>\n                            <legend className=\"blocks-base-control__label\">\n                                Commit Hash\n                            </legend>\n                            <TextControl\n                                value={ commitHash }\n                                onChange={ onChangeTextField }\n                            />\n                        </fieldset>\n                    </div>\n                </PanelBody>\n            </InspectorControls>\n            The Commit Hash is { commitHash }</div>;\n    },\n\n    save: ( { attributes } ) => {\n        const blockProps = useBlockProps.save();\n        const {\n            commitHash,\n        } = attributes;\n\n        return <div { ...blockProps }>The Commit Hash is { commitHash }</div>;\n    },\n} );"],"names":["registerBlockType","useBlockProps","InspectorControls","PanelBody","TextControl","attributes","commitHash","type","edit","setAttributes","blockProps","className","onChangeTextField","newValue","save"],"sourceRoot":""}