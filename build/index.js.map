{"version":3,"file":"index.js","mappings":"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","sources":["webpack://gh-commit-block/external window [\"wp\",\"apiFetch\"]","webpack://gh-commit-block/external window [\"wp\",\"blockEditor\"]","webpack://gh-commit-block/external window [\"wp\",\"blocks\"]","webpack://gh-commit-block/external window [\"wp\",\"components\"]","webpack://gh-commit-block/external window [\"wp\",\"element\"]","webpack://gh-commit-block/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://gh-commit-block/webpack/bootstrap","webpack://gh-commit-block/webpack/runtime/compat get default export","webpack://gh-commit-block/webpack/runtime/define property getters","webpack://gh-commit-block/webpack/runtime/hasOwnProperty shorthand","webpack://gh-commit-block/webpack/runtime/make namespace object","webpack://gh-commit-block/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport {\n        useBlockProps,\n        InspectorControls,\n        ColorPalette,\n} from '@wordpress/block-editor';\nimport {\n        PanelBody, \n        TextControl,\n        __experimentalHeading as Heading,\n        __experimentalText as Text,\n} from '@wordpress/components';\nimport apiFetch from '@wordpress/api-fetch';\n\nregisterBlockType( 'kokkieh/gh-commit-block', {\n    icon: <svg><path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/></svg>,\n    attributes: {\n        commitHash: {\n            type: 'string',\n        },\n        commitSha: {\n            type: 'string',\n        },\n        commitUrl: {\n            type: 'string',\n        },\n        authorName: {\n            type: 'string',\n        },\n        authorUrl: {\n            type: 'string',\n        },\n        commitMessage: {\n            type: 'string',\n        },\n        bg_color: { \n            type: 'string', \n            default: '#000000'\n        },\n        text_color: {\n            type: 'string',\n            default: '#ffffff'\n        },\n        link_color: {\n            type: 'string',\n            default: '#aaaaaa'\n        },\n    },\n\n    edit: ( { attributes, setAttributes } ) => {\n        const blockProps = useBlockProps( { className: 'blockStyles' } );\n        const {\n            commitHash,\n            commitSha,\n            commitUrl,\n            authorName,\n            authorUrl,\n            commitMessage,\n        } = attributes;\n        const onChangeBGColor = ( hexColor ) => {\n            setAttributes( { bg_color: hexColor } );\n        };\n        const onChangeTextColor = ( hexColor ) => {\n            setAttributes( { text_color: hexColor } );\n        };\n\n        // Update commitHash value when entered into block settings\n        function onChangeTextField( newValue ) {\n            setAttributes( { commitHash: newValue } );\n            renderCommit(newValue);\n        }\n\n        // Function to make API request and render the commit data\n        // (only called when the commit hash is updated in block settings)\n        function renderCommit(hash) {\n            apiFetch( { path: '/kokkieh/commit/' + hash } )\n            .then( ( data ) => {\n                setAttributes( { commitSha: data.sha } );\n                setAttributes( { commitUrl: data.html_url } );\n                setAttributes( { authorName: data.commit.author.name } );\n                setAttributes( { authorUrl: data.author.html_url } );\n                setAttributes( { commitMessage: data.commit.message } );\n            } )\n            .catch( error => {\n                setAttributes( { commitSha: \"Please enter a valid commit ID.\" } );\n            } );\n        }\n\n        return <div { ...blockProps } background-color={ attributes.bg_color }>\n            <InspectorControls key=\"setting\">\n                <PanelBody title=\"GitHub Commit Settings\">\n                    <div id=\"gh-commit-widget-controls\">\n                        <fieldset>\n                            <legend className=\"blocks-base-control__label\">\n                                Commit Hash\n                            </legend>\n                            <TextControl\n                                value={ commitHash }\n                                onChange={ onChangeTextField }\n                            />\n                        </fieldset>\n                    </div>\n                </PanelBody>\n                <PanelBody title=\"Colors\">\n                    <div id=\"gh-commit-widget-color-controls\">\n                        <fieldset>\n                            <legend className=\"blocks-base-control__label\">\n                                Background color\n                            </legend>\n                            <ColorPalette\n                                onChange={ onChangeBGColor }\n                            />\n                        </fieldset>\n                    </div>\n                    <div id=\"gh-commit-widget-color-controls\">\n                        <fieldset>\n                            <legend className=\"blocks-base-control__label\">\n                                Text color\n                            </legend>\n                            <ColorPalette\n                                onChange={ onChangeTextColor }\n                            />\n                        </fieldset>\n                    </div>\n                </PanelBody>\n            </InspectorControls>\n            <h3 style={ {color: attributes.text_color} }>Commit Hash</h3>\n            <a href={ commitUrl }>{ commitSha }</a>\n            <h3>Commit Author</h3>\n            <a href={ authorUrl }>{ authorName }</a>\n            <h3>Commit Message</h3>\n            <Text color={ attributes.text_color }>{ commitMessage }</Text>\n        </div>;\n    },\n\n    save: ( { attributes } ) => {\n        const blockProps = useBlockProps.save();\n        const {\n            commitSha,\n            commitUrl,\n            authorName,\n            authorUrl,\n            commitMessage,\n        } = attributes;\n\n        return <div { ...blockProps }>\n            <h3>Commit Hash</h3>\n            <a href={ commitUrl }>{ commitSha }</a>\n            <h3>Commit Author</h3>\n            <a href={ authorUrl }>{ authorName }</a>\n            <h3>Commit Message</h3>\n            { commitMessage }\n        </div>;\n    },\n} );"],"names":["registerBlockType","useBlockProps","InspectorControls","ColorPalette","PanelBody","TextControl","__experimentalHeading","Heading","__experimentalText","Text","apiFetch","icon","attributes","commitHash","type","commitSha","commitUrl","authorName","authorUrl","commitMessage","bg_color","default","text_color","link_color","edit","setAttributes","blockProps","className","onChangeBGColor","hexColor","onChangeTextColor","onChangeTextField","newValue","renderCommit","hash","path","then","data","sha","html_url","commit","author","name","message","catch","error","color","save"],"sourceRoot":""}